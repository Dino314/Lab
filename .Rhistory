g
g<-g+facet_grid(.~Month)+ggtitle("Ozone vs. Temp by months")
g<-g+geom_smooth(method = lm, se = FALSE)
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone), col="red")+
geom_hline(yintercept=mean(airquality$Temp), col="blue")+
ggtitle("Ozone vs. Temp")
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556)), col="blue")+
ggtitle("Ozone vs. Temp")
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()
g<-g+ggtitle("Ozone vs. Temp")+facet_grid(Month~.)
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556)), col="blue")+
ggtitle("Ozone vs. Temp")
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")+cordflip
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")+coord_flip()
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")+coord_flip()
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")+coord_flip()
g
ggplot(data=mtcars, aes(x=as.factor(cyl), y=wt*1000/2.205)) + geom_point()+
xlab("Number of cyl.")+ylab("Weight")+geom_boxplot(outlier.color = "red")
head(iris)
ggplot(data=iris, aes(x=iris$Petal.Length, y=iris$Species)) + geom_point()+
xlab("Petal length")+ylab("Species")+geom_boxplot(outlier.color = "red")
ggplot(data=iris, aes(y=iris$Petal.Length, x=iris$Species)) + geom_point()+
xlab("Petal length")+ylab("Species")+geom_boxplot(outlier.color = "blue")
ggplot(data=iris, aes(x=iris$Species, y=iris$Petal.Length)) + geom_point()+
xlab("Petal length")+ylab("Species")+geom_boxplot(outlier.color = "blue")
ggplot(data=iris, aes(x=iris$Species, y=iris$Petal.Length)) + geom_point()+
xlab("Species")+ylab("Petal length")+geom_boxplot(outlier.color = "blue")
head(iris)
ggplot(data=iris, aes(x=iris$Species, y=iris$Petal.Length)) + geom_point()+
xlab("Species")+ylab("Petal length")+geom_boxplot(outlier.color = "blue")
ggplot(data=iris, aes(x=iris$Species, y=iris$Petal.Length)) + geom_point()+
xlab("Species")+ylab("Petal length")+geom_boxplot(outlier.color = "blue")
head(iris)
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
xlab("Species")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")+coord_flip()
g
g<- ggplot(airquality, aes(x=Ozone, y=(Temp-32)*0.5556))+geom_point()+
geom_vline(xintercept=mean(airquality$Ozone, na.rm = TRUE), col="red")+
ylab("Temp")+
geom_hline(yintercept=mean(((airquality$Temp-32)*0.5556), na.rm = TRUE), col="blue")+
ggtitle("Ozone vs. Temp")+coord_flip()
g
ggplot(data=iris, aes(x=iris$Species, y=iris$Petal.Length)) + geom_point()+
xlab("Species")+ylab("Petal length")+geom_boxplot(outlier.color = "blue")
head(iris)
y<-ggplot(data=iris, aes(x=iris$Species, y=iris$Petal.Length)) + geom_point()+
xlab("Species")+ylab("Petal length")+geom_boxplot(outlier.color = "blue")
g
y
install.packages("gridExtra")
library(gridExtra)
grid.arrange(g,y)
grid.arrange(g,y, ncol=2)
grid.arrange(g,y, ncol=3)
grid.arrange(g,y, ncol=2)
Titanic
g<-ggplot(Titanic, aes(x=Survived, y=Age))
g
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_point()
g
g<-ggplot(Titanic, aes(x=Survived, y=Age))+barchart()
g
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_bar()
g
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_bar(stat="asd")
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_bar()
g
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_bar()
g
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_bar(stat="identity")
g
Titanic
Titanic<-Titanic::Titanic
g<-ggplot(Titanic, aes(x=Age, fill=Survived))+geom_bar(stat="identity")
g
Titanic
g<-ggplot(Titanic, aes(x=Age, fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_bar(stat="identity")
g
Titanic
Titanic::Titanic
library(Titanic)
library("Titanic")
rm(Titanic)
Titanic
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_bar(stat="identity")
g
titanik
titanik<-as.data.frame(Titanic)
titanik
g<-ggplot(Titanic, aes(x=Survived, y=Age))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Survived, y=Age))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Survived, y=Age))+geom_bar(stat="identity")
g<-ggplot(titanik, aes(x=Survived, y=Age))+geom_bar(stat="identity")
sum(titanik$Freq)
g<-ggplot(titanik, aes(x=Survived*Freq, y=Age))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Survived*Freq, y=Age))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Age*Freq, y=sum(Freq), fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Age, y=sum(Freq), fill=Survived))+geom_bar(stat="identity")
g
titanik
t<-as.data.frame(Titanic)%>%select(Age, Survived, Freq)%>%group_by(Age, Survived)%>%mutate(count1=sum(Freq))%>%
top_n(1,Freq)
library(dplyr)
t<-as.data.frame(Titanic)%>%select(Age, Survived, Freq)%>%group_by(Age, Survived)%>%mutate(count1=sum(Freq))%>%
top_n(1,Freq)
t
g<-ggplot(t, aes(x=Age, y=sum(Freq), fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(t, aes(x=Age*Freq, y=sum(Freq), fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(t, aes(x=Age, y=sum(Freq), fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Age, y=sum(Freq), fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Age, y=sum(Freq)/Age, fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Age, y=sum(Freq)/10, fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Age, y=sum(Freq)/15, fill=Survived))+geom_bar(stat="identity")
g
g<-ggplot(titanik, aes(x=Age, y=sum(Freq)/32, fill=Survived))+geom_bar(stat="identity")
g
t
t<-as.data.frame(Titanic)%>%select(Age, Survived, Freq)%>%group_by(Age, Survived)%>%mutate(count1=sum(Freq))%>%
top_n(1,Freq)
t
g<-ggplot(t, aes(x=Age, y=sum(Freq), fill=Survived))+geom_bar(stat="identity")
g
#druga resitev
df<-titanik[rep(1:nrow(titanik), titanik[,5]), -5]
ggplot(df, aes(x=Age, fill=Survived))+geom_bar()
df<-titanik[rep(1:nrow(titanik), titanik[,5]), -5]
ggplot(df, aes(x=Age, fill=Survived))+geom_bar()
g<-ggplot(t, aes(x=Age, y=count1, fill=Survived))+geom_bar(stat="identity")
g
ggplot(df, aes(x=Age, fill=Survived))+geom_bar()
b<-ggplot(df, aes(x=Class, fill=Survived))+geom_bar()
b
grid.arrange(a,b,ncol=2)
df<-titanik[rep(1:nrow(titanik), titanik[,5]), -5]
a<-ggplot(df, aes(x=Age, fill=Survived))+geom_bar()
#class
b<-ggplot(df, aes(x=Class, fill=Survived))+geom_bar()
grid.arrange(a,b,ncol=2)
string <- c("car", "cars", "in a car", "truck", "car's trunk")
pattern <- "car"
grepl(pattern, string)
string <- c("car", "cars", "in a car", "truck", "car's trunk")
pattern <- "car$"
grepl(pattern, string)
grep(pattern, string)
pattern <- "\\scar"
grep(pattern, string)
pattern <- "\\s{1}car"
grep(pattern, string)
pattern <- "^\\s{1}car"
grep(pattern, string)
pattern <- "\\s{1}car"
pattern <- "\\s{1}car$"
grep(pattern, string)
pattern <- "\\s{1}car$"
grep(pattern, string)
###########################
string <- c("car", "cars", "in a car", "truck", "car's trunk")
pattern <- "\\s{1}car$"
grep(pattern, string)
string <- c(" car", "cars", "in a car", "truck", "car's trunk")
pattern <- "\\s{1}car$"
grep(pattern, string)
pattern <- "\\scar$"
grep(pattern, string)
soda <- "([a-z][a-z])*"
grep(soda, string)
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "asd")
pattern <- "\\scar$"
grep(soda, string)
soda <- "([a-z][a-z])"
grep(soda, string)
soda <- "([a-z]{1}[a-z]{1})*"
grep(soda, string)
soda <- "^([a-z]{1}[a-z]{1})*"
grep(soda, string)
soda <- "^([a-z]{1}[a-z]{1})*$"
grep(soda, string)
soda <- "^([a-z][a-z])*$"
grep(soda, string)
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "asds")
grep(soda, string)
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "asdss")
grep(soda, string)
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "asdasdasd")
grep(soda, string)
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "asdasdasds")
grep(soda, string)
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sds")
grep(soda, string)
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sds")
grep(soda, string)
###########################
string <- c("")
grep(soda, string)
soda <- "^([a-z][a-z])+$"
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
grep(soda, string)
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
soda <- "^([a-z])+$"
grep(soda, string)
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
grep(soda, string)
soda <- "^([a-z])+$"
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
grep(soda, string)
soda <- "^([a-z][a-z][a-z])+$"
grep(soda, string)
soda <- "^([a-z][a-z])+$"#soda stevila
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
grep(soda, string)
pattern <- "\\scar$"
soda <- "^([a-z][a-z])+$"#soda stevila
###########################
string <- c(" car", "cars", "in a car", "truck", "car's trunk", "sdss")
grep(soda, string)
soda <- "^([a-z][a-z])+$"#soda stevila
grep(soda, string)
text<-"Yesterday I had 100 Euros, today I only have 45 Euros left."
gregexpr("(\\d+)",text)
gregexpr("(\\d+)",text)
grep("(\\d+)",text)
grep("(\\d+)",text)
grepl("(\\d+)",text)
gregexpr("(\\d+)",text)
gregexpr("(\\d+)",text)[1]
gregexpr("(\\d+)",text)[[1]]
gregexpr("(\\d+)",text)[[1]][1]
gregexpr("(\\d+)",text)[[1]][2]
gregexpr("(\\d+)",text)[[2]][2]
gregexpr("(\\d+)",text)[[2]][1]
gregexpr("(\\d+)",text)[[1]][1]
substr(text, gregexpr("(\\d+)",text)[[1]][1], )
substr(text, gregexpr("(\\d+)",text)[[1]][1], 99)
gregexpr("(\\d+)",text)
gregexpr("(\\d+)",text)[[1]]
gregexpr("(\\d+)",text)[[1]][1]
gregexpr("(\\d+)",text)[[1]][3]
gregexpr("(\\d+)",text)[[1]][2]
substr(text, gregexpr("(\\d+)",text)[[1]][1], 99)
?str()
typeof(gregexpr("(\\d+)",text), )
typeof(gregexpr("(\\d+)",text))
gregexpr("(\\d+)",text)[[1]]
typeof(gregexpr("(\\d+)",text)[[1]])
gregexpr("(\\d+)",text)[[1]]
gregexpr("(\\d+)",text)[[1]][[2]]
gregexpr("(\\d+)",text)[[1]][[3]]
gregexpr("(\\d+)",text)[[1:2]]
gregexpr("(\\d+)",text)[[1:3]]
gregexpr("(\\d+)",text)[[1]]
substr(text, gregexpr("(\\d+)",text)[[1]][1], 233)
as.data.frame(gregexpr("(\\d+)",text)[[1]])
as.data.frame(gregexpr("(\\d+)",text)[[1]])[1,2]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[1,1]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[1]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[[1]]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[[1]][2]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[[2]][2]
as.data.frame(gregexpr("(\\d+)",text)[[1]])
as.data.frame(gregexpr("(\\d+)",text)[[1]])[2,1]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[3]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[1,]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[,1]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[2,]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[3,]
as.data.frame(gregexpr("(\\d+)",text)[[1]])[]
gregexpr("(\\d+)",text)[[1]]
gregexpr("(\\d+)",text)$[1]
gregexpr("(\\d+)",text)$1
substr(text, gregexpr("(\\d+)",text)[[1]][1], 3)
substr(text, gregexpr("(\\d+)",text)[[1]][1], 2)
substr(text, gregexpr("(\\d+)",text)[[1]][1], 20)
substr(text, gregexpr("(\\d+)",text)[[1]][1], 20)
substr(text, gregexpr("(\\d+)",text)[[1]][1], 20)
i<-1
substr(text, gregexpr("(\\d+)",text)[[1]][1], 20)
?str()
i<-1
while(i<length(text)){
substr(text, gregexpr("(\\d+)",text)[[1]][1], 20)
i<-i+1
}
while(i<length(text)){
substr(text, gregexpr("(\\d+)",text)[[1]][1], 20)
i<-i+1
}
i<-1
while(i<length(text)){
substr(text, gregexpr("(\\d+)",text)[[1]][i], 20)
i<-i+1
}
length(text)
text
nchar(text)
i<-1
while(i<nchar(text)){
substr(text, gregexpr("(\\d+)",text)[[1]][i], 20)
i<-i+1
}
while(i<nchar(text)){
substr(text, gregexpr("(\\d+)",text)[[1]][i], 20)
i<-i+1
}
substr(text, gregexpr("(\\d+)",text)[[1]][i], 20)
nchar(text)
i<-1
i
string <- c("(1,2)", "( -2, 7)", "(    -3   ,     45)", "(a, 3)")
pattern<-"\\(\\s*([+-]?(0|[1-9][0-9]*))\\s*,\\s*([+-]?(0|[1-9][0-9]*))\\s*\\)"
lidx <- !grepl(pattern, string)
komp1 <- sub(pattern, "\\1", string)
komp1[lidx] <- NA
komp2 <- sub(pattern, "\\3", string)
komp2[lidx] <- NA
as.integer(komp1)
grepl(pattern, string)
lidx <- !grepl(pattern, string)
lidx
string<-text
pattern<-"(\\d+)"
lidx <- !grepl(pattern, string)
komp1 <- sub(pattern, "\\1", string)
komp1[lidx] <- NA
komp2 <- sub(pattern, "\\3", string)
komp2[lidx] <- NA
as.integer(komp1)
string<-text
pattern<-"D*(d*)*D"
lidx <- !grepl(pattern, string)
komp1 <- sub(pattern, "\\1", string)
komp1[lidx] <- NA
as.integer(komp1)
grep(pattern, string)
text
pattern<-"D*(d*)D"
grep(pattern, string)
pattern<-"D*d*D"
grep(pattern, string)
pattern<-"D*d*D*"
grep(pattern, string)
lidx <- !grepl(pattern, string)
komp1 <- sub(pattern, "\\1", string)
komp1[lidx] <- NA
as.integer(komp1)
pattern<-"(D*d*D*)?"
grep(pattern, string)
grep(pattern, string)
grepexp(pattern, string)
gregexpr(pattern, string)
pattern<-"(^D*d*D*$)?"
gregexpr(pattern, string)
pattern<-"(^D*(d*)D*$)?"
gregexpr(pattern, string)
text
text
pattern<-"(\\D+([0-9]+)\\D+([0-9]+)\\D+"
sub(pattern, "\\2", text)
sub(pattern, "\\3", text)
pattern<-"(\\D+([0-9]+)\\D+([0-9]+)\\D+)"
sub(pattern, "\\2", text)
sub(pattern, "\\3", text)
sub(pattern, "\\3", text)
sub(pattern, "\\2", text)
sub(pattern, "\\3", text)
pattern<-"(\\D+(d+)\\D+(d+)\\D+)"
sub(pattern, "\\2", text)
sub(pattern, "\\3", text)
pattern<-"(\\D+(\\d+)\\D+(\\d+)\\D+)"
sub(pattern, "\\2", text)
sub(pattern, "\\3", text)
sub(pattern, "\\2", text)
sub(pattern, "\\2", text)
pattern<-"(\\D*([0-9]+)\\D+([0-9]+)\\D*)" #[0-9] lahko nadomsetimo z \\d
sub(pattern, "\\2", text)#nekak extractor texta??
sub(pattern, "\\3", text)
text
pattern<-"(\\D*([0-9]+)\\D+([0-9]+)\\D*)" #[0-9] lahko nadomsetimo z \\d
sub(pattern, "\\2", text)#nekak extractor texta??
sub(pattern, "\\3", text)
attributes(gregexpr("(\\d+)",text)[[1]])[[1]][1]# vrne vn 3 pa 2
attributes(gregexpr("(\\d+)",text)[[1]])[[1]][2]# vrne vn 3 pa 2
getOption("repos")
devtools::install_github("rstudio/markdown")
devtools::install_url("http://cran.r-project.org/src/contrib/rmarkdown0.5.1.tar.gz")
getOption("repos")
options(repos = c(CRAN = "https://cran.revolutionanalytics.com"))
---
title: "Untitled"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
`````````````````````````````````````````````````````````````````
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
plot(x, y)
ggplot2::qplot(x,y)
cars
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
library(knitr)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
head(diamonds, 20)
head(diamonds%>%arrange(carat), 20)
head(diamonds%>%arrange(carat, desc), 20)
head(diamonds%>%arrange(carat, descending=TRUE), 20)
head(diamonds%>%arrange(carat, descending), 20)
head(diamonds%>%arrange(desc()), 20)
head(diamonds%>%arrange(desc(carat)), 20)
head(diamonds%>%arrange(desc(carat))[,2], 20)
head(diamonds%>%arrange(desc(carat))[2,], 20)
head(diamonds%>%arrange(desc(carat)), 20)
head(diamonds%>%arrange(desc(carat))[1:7], 20)
head(diamonds%>%arrange(desc(carat)), 20)[1:7]
head(diamonds%>%arrange(desc(carat)), 20)[1:9]
head(diamonds%>%arrange(desc(carat)), 20)[1:7]
round((126/53940)*100, 2)
